package com.consilium.consiliumbackend.common.entities;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.hibernate.annotations.Comment;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;

import java.time.LocalDateTime;

@Entity
@Table(name = "users", indexes = {@Index(name = "idx_users_username", columnList = "username", unique = true)})
@Comment("Users table: stores all registered application users")
@Data
@AllArgsConstructor
@NoArgsConstructor
public class User {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "user_id", nullable = false, updatable = false)
    @Comment("Unique identifier for a user, auto-generated by the database")
    private long id;

    @Column(name = "username", nullable = false, unique = true, length = 64)
    @Comment("Unique username selected by the user for login and identification")
    private String username;

    @Column(name = "email", nullable = false, unique = true)
    @Comment("Unique email address for user communication and login")
    private String email;

    @Column(name = "password", nullable = false)
    @Comment("Hashed password for user authentication")
    private String password;

    @Column(name = "first_name", nullable = false)
    @Comment("User's first name for personalization within the platform")
    private String firstName;

    @Column(name = "last_name")
    @Comment("User's last name, optional field for profile completeness")
    private String lastName;

    @Column(name = "created_on", nullable = false)
    @CreatedDate
    @Comment("Timestamp recording when the user account was initially created")
    private LocalDateTime createdOn;

    @Column(name = "updated_on")
    @LastModifiedDate
    @Comment("Timestamp recording the last update to the user account")
    private LocalDateTime updatedOn;
}
